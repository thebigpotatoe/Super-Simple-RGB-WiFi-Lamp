// Created by Website/update_website.py
const char websiteSource[] PROGMEM =
  "<!DOCTYPE html>\n"
  "<html>\n"
  "\n"
  "<head>\n"
  "    <meta charset=\"utf-8\">\n"
  "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n"
  "    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n"
  "    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n"
  "    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n"
  "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\n"
  "    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n"
  "\n"
  "    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/tinyColorPicker/1.1.1/jqColorPicker.min.js\"></script>\n"
  "\n"
  "    <title>RGB WiFi Lamp</title>\n"
  "    <script>\n"
  "        var websock;\n"
  "        var messageEventList = []\n"
  "        var reconnectTimer;\n"
  "\n"
  "        $(function () {\n"
  "            connectToWebsockets()\n"
  "            messageEventList.push(createNewTab)\n"
  "        })\n"
  "\n"
  "        function connectToWebsockets() {\n"
  "\n"
  "            websock = new WebSocket('ws://' + window.location.hostname + ':81/');\n"
  "\n"
  "            $(\"#currentModeLabel\").html(\"Connecting to lamp...\")\n"
  "            websock.onopen = function (evt) {\n"
  "                console.log('websock opened');\n"
  "            }\n"
  "            websock.onclose = function (evt) {\n"
  "                console.log('websock closed. Reconnecting in 5 seconds');\n"
  "                $(\"#currentModeLabel\").html(\"Lost connection to lamp! Trying to reconnect.\");\n"
  "                if (reconnectTimer) clearTimeout(reconnectTimer);\n"
  "                reconnectTimer = setTimeout(function () {\n"
  "                    connectToWebsockets()\n"
  "                }, 5000);\n"
  "            }\n"
  "            websock.onerror = function (evt) {\n"
  "                console.error(evt);\n"
  "            }\n"
  "            websock.onmessage = function (evt) {\n"
  "                 // console.log(\"Incoming Data is: \" + evt.data)\n"
  "                try {\n"
  "                    // Parse the jsonString\n"
  "                    let jsonMessage = JSON.parse(evt.data);\n"
  "\n"
  "                    // Pass the JSON object to each callback\n"
  "                    messageEventList.forEach((eventMethod) => {\n"
  "                        eventMethod(jsonMessage)\n"
  "                    })\n"
  "                }\n"
  "                catch (err) {\n"
  "                    console.warn(err)\n"
  "                }\n"
  "            }\n"
  "        }\n"
  "\n"
  "        function sendMessage(jsonMessage) {\n"
  "            console.log(\"Sending: \" + JSON.stringify(jsonMessage))\n"
  "            if (websock != null && websock.readyState == 1) {\n"
  "                websock.send(JSON.stringify(jsonMessage));\n"
  "            } else {\n"
  "                alert(\"Websockets are closed\")\n"
  "                console.warn(\"Websockets are closed\")\n"
  "            }\n"
  "        }\n"
  "\n"
  "        function setPickerColor(picker, r, g, b) {\n"
  "            var rgb_color = 'rgb(' + r + ', ' + g + ', ' + b + ')';\n"
  "            picker.val(rgb_color);\n"
  "            picker.colorPicker.color.setColor(rgb_color);\n"
  "            picker.css({\n"
  "                backgroundColor: rgb_color,\n"
  "                color: picker.colorPicker.color.colors.RGBLuminance > 0.22 ? '#222' : '#ddd'\n"
  "            }).text(rgb_color);\n"
  "        }\n"
  "\n"
  "        function createNewTab(jsonMessage) {\n"
  "            if (\"Tab\" in jsonMessage) {\n"
  "                // Get  the Tab message\n"
  "                jsonMessage = jsonMessage.Tab\n"
  "\n"
  "                // Check if valid keys in message\n"
  "                if (\"Name\" in jsonMessage && \"tabHtml\" in jsonMessage && \"tabScript\" in jsonMessage) {\n"
  "                    // Get a safe name to use for the id of HTML elements\n"
  "                    let safeName = jsonMessage.Name.replace(\" \", \"\")\n"
  "\n"
  "                    // Check if the tab already exists\n"
  "                    if ($(\"#\" + safeName).length != 0) return\n"
  "\n"
  "                    // Create the nav bar link\n"
  "                    let navBarScript = document.createElement(\"script\");\n"
  "                    let inlineNavBarScript = document.createTextNode(`$(\"#` + safeName + `TabNavItem\").click(function () {\\r\\n\n"
  "                        sendMessage({ \"Mode\": \"` + jsonMessage.Name + `\" })\\r\\n\n"
  "                    });`);\n"
  "                    navBarScript.appendChild(inlineNavBarScript);\n"
  "                    $(\"#navBar\").append(`<li id=\"` + safeName + `TabNavItem\" class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#` + safeName + `\">` + jsonMessage.Name + `</a></li>`)\n"
  "                    $(\"#navBar\").append(navBarScript);\n"
  "\n"
  "                    // Create the home button\n"
  "                    let buttonScript = document.createElement(\"script\");\n"
  "                    let inlineButtonScript = document.createTextNode(`$(\"#` + safeName + `NavButton\").click(function () {\\r\\n\n"
  "                        $('#navbarHeader a[href=\"#` + safeName + `\"]').tab('show')\\r\\n\n"
  "                        sendMessage({ \"Mode\": \"` + jsonMessage.Name + `\" })\\r\\n\n"
  "                    });`);\n"
  "                    buttonScript.appendChild(inlineButtonScript);\n"
  "                    $(\"#Home\").append(`<button id=\"` + safeName + `NavButton\" type=\"submit\" class=\"col mb-2 mx-2 btn btn-lg btn-outline-light\">` + jsonMessage.Name + `</button>`)\n"
  "                    $(\"#navBar\").append(buttonScript);\n"
  "\n"
  "                    // Create the tab body\n"
  "                    var tabScript = document.createElement(\"script\");\n"
  "                    var tabInlineScript = document.createTextNode(jsonMessage.tabScript);\n"
  "                    tabScript.appendChild(tabInlineScript);\n"
  "                    $(\"#tabs\").append(\"<div id=\\\"\" + safeName + \"\\\" class=\\\"container pb-5 tab-pane fade\\\">\\n\" + jsonMessage.tabHtml + \"\\n</div>\");\n"
  "                    $(\"#\" + safeName).append(tabScript);\n"
  "                }\n"
  "            }\n"
  "        }\n"
  "    </script>\n"
  "\n"
  "</head>\n"
  "\n"
  "<body class=\"bg-dark text-light text-justify\">\n"
  "    <nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark fixed-top\" id=\"navbarHeader\">\n"
  "        <div class=\"container-fluid\">\n"
  "            <a class=\"navbar-brand\" href=\"#\" id=\"HomeButton\">RGB WiFi Lamp</a>\n"
  "            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n"
  "                <span class=\"navbar-toggler-icon\"></span>\n"
  "            </button>\n"
  "            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n"
  "                <ul id=\"navBar\" class=\"nav navbar-nav\">\n"
  "                    <li class=\"nav-item\">\n"
  "                        <a id=\"homeTabNavItem\" class=\"nav-link active\" data-toggle=\"tab\" href=\"#Home\">Home</a>\n"
  "                    </li>\n"
  "                    <li id=\"wifiTabNavItem\" class=\"nav-item\">\n"
  "                        <a class=\"nav-link\" data-toggle=\"tab\" href=\"#WfiConfig\">Wifi</a>\n"
  "                    </li>\n"
  "                </ul>\n"
  "\n"
  "                <script>\n"
  "                    $(function () {\n"
  "                        $(\".nav-item\").click(function () {\n"
  "                            $(\".collapse\").collapse('hide');\n"
  "                        });\n"
  "                    });\n"
  "                </script>\n"
  "            </div>\n"
  "        </div>\n"
  "\n"
  "    </nav>\n"
  "    <div id=\"tabs\" class=\"tab-content container\" style=\"margin-top:80px\">\n"
  "        <div id=\"modeDisplay\" class=\"container\">\n"
  "            <h1>Mode: <span id=\"currentModeLabel\"></span></h1>\n"
  "            <div class=\"col mb-4\">\n"
  "                <label for=\"fadeTime\">Fade Time: <span id=\"fadeTimeLabel\">200</span> milliseconds</label>\n"
  "                <input id=\"fadeTime\" type=\"range\" min=\"0\" max=\"2000\" step=\"100\" value=\"200\" class=\"form-control-range custom-range\">\n"
  "            </div>\n"
  "            <button id=\"stateButton\" type=\"submit\" class=\"col mb-2 mx-2 btn btn-lg btn-outline-light\" value=\"OFF\">Turn ON</button>\n"
  "            <script>\n"
  "                fadeTimeDebounce = Date.now()\n"
  "\n"
  "                messageEventList.push(handleStateMessage)\n"
  "                messageEventList.push(handleModeMessage)\n"
  "                messageEventList.push(handleFadeTimeMessage)\n"
  "\n"
  "                $(\"#stateButton\").click(function () {\n"
  "                    var newState = $(\"#stateButton\").val() == \"ON\" ? \"OFF\" : \"ON\"\n"
  "                    onStateButtonEvent(newState)\n"
  "                });\n"
  "                $(\"#fadeTime\").on(\"input\", function () {\n"
  "                    onFadeTimeEvent()\n"
  "                });\n"
  "                $(\"#fadeTime\").on(\"change\", function () {\n"
  "                    onFadeTimeEvent()\n"
  "                });\n"
  "\n"
  "                function handleModeMessage(jsonMessage) {\n"
  "                    if (\"Mode\" in jsonMessage) {\n"
  "                        jsonMessage = jsonMessage.Mode\n"
  "                        if (typeof jsonMessage === \"string\") {\n"
  "                            $(\"#currentModeLabel\").html(jsonMessage)\n"
  "                        }\n"
  "                    }\n"
  "                }\n"
  "\n"
  "                function handleStateMessage(jsonMessage) {\n"
  "                    if (\"State\" in jsonMessage) {\n"
  "                        jsonMessage = jsonMessage.State\n"
  "                        if (typeof jsonMessage === \"boolean\") {\n"
  "                            if (jsonMessage) {\n"
  "                                $(\"#stateButton\").val(\"ON\")\n"
  "                                $(\"#stateButton\").html(\"Turn OFF\")\n"
  "                            }\n"
  "                            else {\n"
  "                                $(\"#stateButton\").val(\"OFF\")\n"
  "                                $(\"#stateButton\").html(\"Turn ON\")\n"
  "                            }\n"
  "                        }\n"
  "                    }\n"
  "                }\n"
  "\n"
  "                function handleFadeTimeMessage(jsonMessage) {\n"
  "                    if (\"Fade Time\" in jsonMessage) {\n"
  "                        jsonMessage = jsonMessage[\"Fade Time\"]\n"
  "                        if (typeof jsonMessage === \"number\") {\n"
  "                            $(\"#fadeTime\").val(jsonMessage)\n"
  "                            $(\"#fadeTimeLabel\").html(jsonMessage)\n"
  "                        }\n"
  "                    }\n"
  "                }\n"
  "\n"
  "                function onStateButtonEvent(currentState) {\n"
  "                    if (currentState != $(\"#stateButton\").val()) {\n"
  "                        if (currentState === \"OFF\") {\n"
  "                            msgValue = false\n"
  "                            $(\"#stateButton\").val(\"OFF\")\n"
  "                            $(\"#stateButton\").html(\"Turn ON\")\n"
  "                        }\n"
  "                        else if (currentState === \"ON\") {\n"
  "                            msgValue = true\n"
  "                            $(\"#stateButton\").val(\"ON\")\n"
  "                            $(\"#stateButton\").html(\"Turn OFF\")\n"
  "                        }\n"
  "\n"
  "                        msg = {\n"
  "                            \"State\": msgValue\n"
  "                        }\n"
  "\n"
  "                        sendMessage(msg)\n"
  "                    }\n"
  "                }\n"
  "\n"
  "                function onFadeTimeEvent() {\n"
  "                    let currentFadeTimeValue = parseInt($(\"#fadeTime\").val(), 10)\n"
  "                    $(\"#fadeTimeLabel\").html(currentFadeTimeValue)\n"
  "\n"
  "                    msg = {\n"
  "                        \"Fade Time\": currentFadeTimeValue\n"
  "                    }\n"
  "\n"
  "                    if (Date.now() - fadeTimeDebounce > 50) {\n"
  "                        fadeTimeDebounce = Date.now()\n"
  "                        sendMessage(msg)\n"
  "                    }\n"
  "                }\n"
  "            </script>\n"
  "            <hr>\n"
  "        </div>\n"
  "        <div id=\"Home\" class=\"container tab-pane active\">\n"
  "            <h1>Home</h1>\n"
  "            <p>Welcome to your RGB WiFi Lamp web page! Here you can change the mode to one of the pre programmed ones below. Click any of the buttons to interact with the light.</p>\n"
  "            <button id=\"wifiButton\" type=\"submit\" class=\"col mb-2 mx-2 btn btn-lg btn-outline-light\">Wifi Config</button>\n"
  "\n"
  "            <script>\n"
  "                $(\"#wifiButton\").click(function () {\n"
  "                    $('#navbarHeader a[href=\"#WfiConfig\"]').tab('show')\n"
  "                });\n"
  "            </script>\n"
  "        </div>\n"
  "        <div id=\"WfiConfig\" class=\"container pb-5 tab-pane fade\">\n"
  "            <h2>Wifi Configuration</h2>\n"
  "            <p>This is the WiFi configuration page. Here you can choose the wifi access point to connect to or go back\n"
  "                to access point mode. This will be remebered through reboot for you so you wont have to set this up\n"
  "                every time. <b>Please allow a few seconds for this page to update the table.</b> </p>\n"
  "            <table class=\"table table-hover\">\n"
  "                <thead id=\"wifiTableHead\">\n"
  "                    <tr>\n"
  "                        <th>SSID</th>\n"
  "                        <th>RSSI</th>\n"
  "                        <th>BSSID</th>\n"
  "                        <th>Channel</th>\n"
  "                        <th>Encrypted</th>\n"
  "                    </tr>\n"
  "                </thead>\n"
  "                <tbody id=\"wifiTableBody\">\n"
  "                </tbody>\n"
  "            </table>\n"
  "\n"
  "            <button id=\"rescanButton\" class=\"col mb-2 mx-2 btn btn-lg btn-outline-light\">Rescan</button>\n"
  "\n"
  "            <div id=\"wifiConfigForm\">\n"
  "                <div class=\"form-group\">\n"
  "                    <label for=\"SSIDInput\">SSID</label>\n"
  "                    <input id=\"SSIDInput\" class=\"form-control\" placeholder=\"SSID\" type=\"text\">\n"
  "                </div>\n"
  "                <div class=\"form-group\">\n"
  "                    <label for=\"PassInput\">Password</label>\n"
  "                    <input id=\"PassInput\" class=\"form-control\" placeholder=\"Password\" type=\"text\">\n"
  "                </div>\n"
  "                <button id=\"wifiConfigSubmitButton\" type=\"submit\" class=\"btn btn-lg btn-outline-light\">Submit</button>\n"
  "            </div>\n"
  "\n"
  "            <script>\n"
  "                wifiDebounce = Date.now()\n"
  "\n"
  "                messageEventList.push(handleWifiMessage)\n"
  "\n"
  "                $(\"#rescanButton\").click(function () {\n"
  "                    onRescanWifiEvent()\n"
  "                });\n"
  "                $(\"#wifiConfigSubmitButton\").click(function () {\n"
  "                    onSubmitWifiEvent()\n"
  "                });\n"
  "\n"
  "                function handleWifiMessage(jsonMessage) {\n"
  "                    // {\n"
  "                    //     \"Wifi\" : {\n"
  "                    //         \"ScanResults\" : [\n"
  "                    //             {\n"
  "                    //                 \"SSID\" : \"Test\",\n"
  "                    //                 \"RSSI\" : -70,\n"
  "                    //                 \"BSSID\" : \"MAC\",\n"
  "                    //                 \"Channel\" : 1,\n"
  "                    //                 \"Encrypt\" : \"Yes\"\n"
  "                    //             }\n"
  "                    //         ]\n"
  "                    //     }\n"
  "                    // }\n"
  "\n"
  "                    if (\"Wifi\" in jsonMessage) {\n"
  "                        jsonMessage = jsonMessage.Wifi\n"
  "                        if (typeof jsonMessage === \"object\") {\n"
  "                            if ((\"ScanResults\" in jsonMessage)) {\n"
  "                                if (typeof jsonMessage.ScanResults === \"object\") {\n"
  "                                    let specific_tbody = document.getElementById(\"wifiTableBody\");\n"
  "                                    for (var i = specific_tbody.rows.length - 1; i > -1; i--) {\n"
  "                                        specific_tbody.deleteRow(i);\n"
  "                                    }\n"
  "\n"
  "                                    for (var i = 0; i < jsonMessage.ScanResults.length; i++) {\n"
  "                                        let row = specific_tbody.insertRow(-1);\n"
  "                                        let ssidCell = row.insertCell(0).appendChild(document.createTextNode(jsonMessage.ScanResults[i].SSID));\n"
  "                                        let rssiCell = row.insertCell(1).appendChild(document.createTextNode(jsonMessage.ScanResults[i].RSSI));\n"
  "                                        let bssidCell = row.insertCell(2).appendChild(document.createTextNode(jsonMessage.ScanResults[i].BSSID));\n"
  "                                        let channelCell = row.insertCell(3).appendChild(document.createTextNode(jsonMessage.ScanResults[i].CHANNEL));\n"
  "                                        let encryptedCell = row.insertCell(4).appendChild(document.createTextNode(jsonMessage.ScanResults[i].ENCRYPT));\n"
  "\n"
  "                                        row.addEventListener(\"click\", function () {\n"
  "                                            document.getElementById('SSIDInput').value = this.firstChild.innerHTML;\n"
  "                                        });\n"
  "                                    }\n"
  "                                }\n"
  "                            }\n"
  "                        }\n"
  "                    }\n"
  "                }\n"
  "\n"
  "                function onRescanWifiEvent() {\n"
  "                    msg = {\n"
  "                        \"Wifi\": {\n"
  "                            \"Rescan\": true\n"
  "                        }\n"
  "                    }\n"
  "\n"
  "                    if (Date.now() - wifiDebounce > 2000) {\n"
  "                        wifiDebounce = Date.now()\n"
  "                        sendMessage(msg)\n"
  "                    }\n"
  "                }\n"
  "\n"
  "                function onSubmitWifiEvent() {\n"
  "                    msg = {\n"
  "                        \"Wifi\": {\n"
  "                            \"SSID\": $(\"#SSIDInput\").val(),\n"
  "                            \"Password\": $(\"#PassInput\").val()\n"
  "                        }\n"
  "                    }\n"
  "\n"
  "                    $(\"#SSIDInput\").val(\"\")\n"
  "                    $(\"#PassInput\").val(\"\")\n"
  "\n"
  "                    if (Date.now() - wifiDebounce > 2000) {\n"
  "                        wifiDebounce = Date.now()\n"
  "                        sendMessage(msg)\n"
  "                    }\n"
  "                }\n"
  "            </script>\n"
  "        </div>\n"
  "    </div>\n"
  "</body>\n"
  "\n"
  "</html>\n"
;
